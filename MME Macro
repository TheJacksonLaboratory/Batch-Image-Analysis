// Macro code for batch processing a folder
// of .tif files, includes saving .tifs back into the 
// ORIGINAL folder with a modified version 
// of the original image name

       dir = getDirectory("Choose input Directory ");      // prompts the user to select the folder to be processed, stores the folder as the destination for saving
     list = getFileList(dir);                                             // gives ImageJ a list of all files in the folder to work through
   print(list.length);                                                      // optional prints the number of files in the folder
   dir2 = getDirectory("Choose output Directory "); // promts user to select folder to be saved in


// Note that the above processes are outside the loop brackets {  }, so they will only be called once at the beginning of the macro


 setBatchMode(false);               // runs up to 6 times faster, without showing images onscreen.  Turn off during troubleshooting steps??
    for (f=0; f<list.length; f++) {	// main files loop (process every image until you get to the bottom of the list), { means open a loop
        path = dir+list[f];                       // creates the filepath for saving
 print(path);                                      // optional prints the filepath name to a log window
        showProgress(f, list.length);     // optional progress monitor
        if (!endsWith(path,"/")) open(path);  // open the filepath
if (nImages>=1) {                                          // stop when there are no more images in the folder
// Not needed if folder is only tif  if (endsWith(path,"f")) {		// Processes only tif files.   Useful if there are log or metadata files in the folder  

   start = getTime();                             //optional get start time to see how long a process will take.  Goes with last line print time


   t=getTitle();                                        // gets the name of the image being processed                                     

run("Set... ", "zoom=100 x=696 y=520"); // the 200 zoom might not be the best zoom amount we will want to play with this 
waitForUser("Draw ROI, then hit OK"); 
roiManager("Add");
roiManager("Save", dir2 + t + ".zip");
run("Measure");

run("RGB Color");
run("HSB Stack");
run("Stack to Images");
selectWindow("Saturation");
rename(t+ "Saturation");
setThreshold(80, 255);

roiManager("Select", 0);
run("Set Measurements...", "area mean area_fraction display redirect=None decimal=1");
run("Measure");

roiManager("Delete");

selectWindow("Hue");
close();
selectWindow("Brightness");
close();
selectWindow(t+"Saturation");
close();
selectWindow(t);
close;
                                // closes whichever window is on top without saving. 
                                                              // You may need to add additional close commands to close all your windows
       }                                 // Closes a loop.  Note there are as many } as there are { in the code, and each } is on it's own line
    }


selectWindow("Results");
saveAs(dir2+"MME_Results.txt");

 print((getTime()-start)/1000);      // optional, goes with getTime.  Prints the amount of time taken for processing to the log file

